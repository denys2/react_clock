{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentDate","Date","timerId","handleContextMenu","event","preventDefault","props","setHasClock","handleClick","document","addEventListener","this","removeEventListener","window","setInterval","date","console","info","getDateString","setState","prevProps","name","debug","clearInterval","toUTCString","slice","className","React","Component","App","hasClock","clockName","value","now","toString","getRandomName","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,EAuCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IAzC3B,EA4CEC,YAAc,SAACJ,GACbA,EAAMC,iBACN,EAAKC,MAAMC,aAAY,IA9C3B,uDAOE,WAA2B,IAAD,OACxBE,SAASC,iBAAiB,cAAeC,KAAKR,mBAC9CM,SAASG,oBAAoB,QAASD,KAAKH,aAE3CG,KAAKT,QAAUW,OAAOC,aAAY,WAChC,IAAMC,EAAO,IAAId,KAGjBe,QAAQC,KAAK,EAAKC,cAAcH,IAChC,EAAKI,SAAS,CAAEnB,YAAae,MAC5B,OAjBP,gCAoBE,SAAmBK,GACbA,EAAUC,OAASV,KAAKL,MAAMe,MAEhCL,QAAQM,MAAR,uBAA8BF,EAAUC,KAAxC,eAAmDV,KAAKL,MAAMe,SAvBpE,kCA2BE,WACEZ,SAASC,iBAAiB,QAASC,KAAKH,aACxCC,SAASG,oBAAoB,cAAeD,KAAKR,mBAEjDoB,cAAcZ,KAAKT,WA/BvB,2BAmCE,SAAca,GACZ,OAAOA,EAAKS,cAAcC,OAAO,IAAK,KApC1C,oBAiDE,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKL,MAAMe,OAGb,YAED,sBAAMK,UAAU,cAAhB,SACGf,KAAKO,cAAcP,KAAKZ,MAAMC,sBA3DzC,GAA2B2B,IAAMC,WCG1B,IAAMC,EAAb,4MACE9B,MAAe,CACb+B,UAAU,EACVC,UAAW,WAHf,EAME7B,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBS,KAAKT,QAAUW,OAAOC,aAAY,WAChC,IAAMiB,EApBZ,WACE,IAAMC,EAAQ/B,KAAKgC,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAiBMG,GAElB,EAAKhB,SAAS,CAAEY,gBACf,QAbP,kCAgBE,WACER,cAAcZ,KAAKT,WAjBvB,oBAoBE,WAAU,IAAD,OACP,OACE,sBAAKwB,UAAU,MAAf,UACE,6CAECf,KAAKZ,MAAM+B,UACV,cAAC,EAAD,CACEvB,YAAa,SAACuB,GAAD,OAAc,EAAKX,SAAS,CAAEW,cAC3CT,KAAMV,KAAKZ,MAAMgC,mBA5B7B,GAAyBJ,IAAMC,WCX/BQ,IAASC,OACP,cAAC,EAAD,IACA5B,SAAS6B,eAAe,W","file":"static/js/main.7851f328.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentDate: Date;\n};\n\ntype Props = {\n  setHasClock: (hasClock: boolean) => void;\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    currentDate: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line no-console\n      console.info(this.getDateString(date));\n      this.setState({ currentDate: date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n\n    clearInterval(this.timerId);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getDateString(date: Date): string {\n    return date.toUTCString().slice(-12, -4);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(false);\n  };\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.props.setHasClock(true);\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getDateString(this.state.currentDate)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock\n            setHasClock={(hasClock) => this.setState({ hasClock })}\n            name={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}